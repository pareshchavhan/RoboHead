
# Login
login.field.username=//input[@name='username' or @id='username-inputEl']
login.field.password=//input[@name='password' or @id='password-inputEl']
login.button.login=//input[@value='LOG IN']
login.text.invalidLogin=//label[contains(text(),'The email address or password you provided was not recognized.')]
login.text.blankEntry=//label[contains(text(),'Please enter all required fields.')]
login.text.success=//label[text()='ACCOUNT ADMIN']
login.link.contactSupport=//a[contains(text(),'Contact RoboHead Support ')]
login.link.help=//a[contains(text(),'Contact RoboHead Support ')]/img
login.image.logo=//img[contains(@src,'../UI-INF/images/login/logo.png')]
login.link.createAccount=//a[contains(text(),'Create an account here')]
login.text.createAccount=
login.link.logout=//span[contains(@id,'logoutBtn') and contains(@data-ref,'btnWrap')]/span/span[2]
logout.text.success=//div[contains(text(),'Welcome')]
login.link.contactsuport.success=//div[contains(@data-embed,'ticketSubmissionForm')]
login.form.contactRoboHeadSupport=//iframe[@id='webWidget']
login.button.contactsupport.cancel=//div[text()='Cancel']
login.button.createAccount.cancel=//a[text()='Cancel']
login.link.forgotPassword=//a[text()=' Forgot password? ']
login.button.forgorPassword.cancel=//span[text()='SEND']/following::a

# Main
main.tab.dashboard=//span[contains(text(),'Dashboard')]
main.tab.projects=//span[text()='Projects']
main.tab.campaigns=//span[text()='Campaigns']
main.tab.requests=//span[text()='Requests']
main.tab.myWork=//span[text()='My Work']
main.tab.reviews=//span[text()='Reviews']
main.tab.notes=//span[text()='Notes']
main.tab.clients=//span[text()='Clients']
main.tab.library=//span[text()='Library']
main.tab.users=//span[text()='Users']
main.tab.estimates=//span[text()='Estimates']
main.tab.reports=//span[text()='Reports']
main.tab.account=//span[text()='Account']
main.tab.recycleBin=//span[text()='Recycle Bin']

# Dashboard
dashboard.image.logo=//img[contains(@src,'/UI-INF/images/logo_robohead_dark.png')]
dashboard.button.search=//a[contains(@id,'search')]
dashboard.button.favorite=//a[contains(@id,'favourite')]
dashboard.button.help=//a[contains(@id,'help')]
dashboard.button.logout=//a[contains(@id,'logout')]
dashboard.button.refresh1=(//a[@data-qtip='Refresh'])[1]
dashboard.button.setting=(//a[@data-qtip='Setting'])[1]
dashboard.link.helpicon=//a[contains(@id,'help')]
dashboard.field.onlineHelp=//span[contains(text(),'Online Help')]
dashboard.link.contactSupportLink=//span[contains(text(),'Contact RoboHead Support')]
dashboard.form.frame=//iframe[@id='webWidget']
dashboard.field.userName=//input[@name='name']
dashboard.field.email=//input[@name='email']
dashboard.field.userHelp=//textarea[@name='description']
dashboard.field.attachement=//div[contains(text(),'Add file or drop here')]
dashboard.button.send=//input[@value='Send']
dashboard.button.cancel=//div[contains(text(),'Cancel')]
dashboard.field.messagePopup=//div[contains(@data-embed,'ticketSubmissionForm')]
dashboard.popup.closepopup=//span[@type='Icon--dash']
dashboard.tab.enhancementSuggestion=//span[contains(text(),'Submit Enhancement Suggestion')]
dashboard.form.enhancementSuggestion=//iframe[contains(@class,'iframe-')]
dashboard.field.yourName=(//div[contains(@class,'quantumWizTextinputPaperinputInputArea')])[1]/input
dashboard.field.phoneNumber=(//div[contains(@class,'quantumWizTextinputPaperinputInputArea')])[2]/input
dashboard.field.yourMailid=(//div[contains(@class,'quantumWizTextinputPaperinputInputArea')])[3]/input
dashboard.field.accountURL=(//div[contains(@class,'quantumWizTextinputPaperinputInputArea')])[4]/input
dashboard.field.jobTitle=(//div[contains(@class,'quantumWizTextinputPaperinputInputArea')])[5]/input
dashboard.button.userType=//span[contains(text(),'Account Administrator')]
dashboard.field.requestTitle=(//div[contains(@class,'quantumWizTextinputPaperinputInputArea')])[6]/input
dashboard.tab.chooseModule=//content[contains(text(),'Choose')]
dashboard.tab.dropdownList=//div[contains(@class,'exportSelectPopup quantumWizMenuPaperselectPopup')]/div
dashboard.tab.dashboard=(//content[contains(text(),'Dashboard')])[2]
dashboard.field.feature=(//div[contains(@class,'quantumWizTextinputPapertextareaContentArea exportContentArea')])[1]/textarea
dashboard.field.objective=(//div[contains(@class,'quantumWizTextinputPapertextareaContent')])[2]/textarea
dashboard.button.submit=//content[contains(@class,'quantumWizButtonPaperbuttonContent')]/span
dashboard.button.closeForm=//div[contains(@data-qtip,'Close panel')]
dashboard.tab.collapseOrExpand=//div[contains(@id,'collapse-expand')]
dashboard.form.favoriteList=//div[contains(@role,'menu') and not(contains(@aria-expanded,'false'))]


# Project
project.button.newProject=(//span[contains(text(),'New Project')])[1]
project.button.activeProject=(//span[text()='Active Projects'])[1]
project.button.listView=//span[contains(text(),'List View') and not(contains(@data-ref,'text'))]
project.button.menuListView=//span[contains(text(),'List View') and contains(@id,'menuitem')]
project.button.ganntChartView=//span[contains(text(),'Gantt Chart') and contains(@id,'button')]
project.button.menuGanntChartView=//span[contains(text(),'Gantt Chart') and contains(@id,'menuitem')]
project.button.export=//a[contains(@data-qtip,'Export Project List')]
project.button.refresh=//a[contains(@data-qtip,'Export Project List')]/following::a[contains(@data-qtip,'Refresh')]
project.button.setting=//a[contains(@data-qtip,'Export Project List')]/following::a[contains(@data-qtip,'Setting')]
project.button.menu.newProject=//span[(text()='New Project') and not(contains(@data-ref,'btn'))]
project.list.grid=//div[contains(@id,'projectlistpanel') and contains(@data-ref,'body')]
project.list.text.success=//label[contains(text(),'Page:')]
project.button.listView=//span[text()='List View']
project.button.listViewExportButton=//a[contains(@data-qtip,'Export Project List')]
project.button.listViewRefreshButton=(//a[contains(@data-qtip,'Export Project List')]/following::a)[2]
project.button.listViewSettingButton=(//a[contains(@data-qtip,'Setting')])[2]
project.button.alertyesbutton=//div[contains(@role,'alertdialog')]
project.button.newProject=(//span[contains(text(),'New Project')])[1]
#project.button.activeProject=(//span[text()='Active Projects'])[1]
project.button.archiveproject=(//span[text()='Archived Projects'])[1]
project.button.archiveprojectexportbutton=//a[@data-qtip='Export Project List']
project.field.duedate=//input[contains(@name,'dueDate')]

#project list bottom element
project.button.filterBy=//div[contains(@id,'projectPanel')]//div[contains(@id,'projectlistview') and contains(@id,'body')]/following::div[contains(@id,'custompagingbar') and contains(@id,'innerCt')][1]/div/a[1]
project.label.show=//div[contains(@id,'projectPanel')]//div[contains(@id,'custompagingbar') and contains(@id,'innerCt')]//span[contains(text(),'Show:')]
project.field.shownumber=//div[contains(@id,'projectPanel')]//div[contains(@id,'custompagingbar') and contains(@id,'innerCt')]//span[contains(text(),'Show:')]/following::div[1]
project.label.result=//div[contains(@id,'projectPanel')]//div[contains(@id,'custompagingbar') and contains(@id,'innerCt')]//label[contains(text(),'Results')]
project.label.viewNumberOfProjects=//div[contains(@id,'projectPanel')]//div[contains(@id,'custompagingbar') and contains(@id,'innerCt')]//label[contains(text(),'Viewing') and contains(text(),'Projects')]
project.label.page=//div[contains(@id,'projectPanel')]//div[contains(@id,'custompagingbar') and contains(@id,'innerCt')]//span[contains(text(),'Page:')]
project.field.pageNumber=//div[contains(@id,'projectPanel')]//div[contains(@id,'custompagingbar') and contains(@id,'innerCt')]//span[contains(text(),'Page:')]/following::div[1]//input
project.label.numberOfPagesAvailable=//div[contains(@id,'projectPanel')]//div[contains(@id,'custompagingbar') and contains(@id,'innerCt')]//span[contains(text(),'Page:')]/following::div[1]/following::div[contains(@id,'tbtext') and not(contains(text(),'Page'))]

project.getlist.page.sucess=//div[contains(text(),'many')]/following::div[1]
project.listofproject.sucess=(//div[contains(@id,'projectlistview')])[2]/div/div[2]/table
project.list.page.success=//div[contains(text(),'many')]/following::div[1]
project.list.page.text.success=//div[contains(text(),'many')]/following::div[1]
project.list.page.current=(//div[contains(text(),'many')]/following::div[1]/preceding-sibling::div)[7]//input
project.list.page.previous=//div[contains(@id,'projectPanel')]//div[contains(@id,'custompagingbar') and contains(@id,'innerCt')]//a[contains(@data-qtip,'Previous Page')]
project.list.page.previousbutton=//div[contains(@id,'projectPanel')]//div[contains(@id,'custompagingbar') and contains(@id,'innerCt')]//a[contains(@data-qtip,'Previous Page')]//span[contains(@id,'button') and contains(@id,'btnInnerEl')]
project.list.page.next=//div[contains(@id,'projectPanel')]//div[contains(@id,'custompagingbar') and contains(@id,'innerCt')]//a[contains(@data-qtip,'Next Page')]
project.list.gridView=//div[contains(@id,'projectlistview') and contains(@id,'body')]

# Create project
project.field.create.projectName=//span[contains(text(),'Project Name:')]/following::input[1]
#project.field.create.description=//textarea[@name='description' and @data-ref='inputEl']
#project.field.create.projectType=//span[contains(text(),'Project Type:')]/following::input[1]
project.field.create.projectDocument=//input[contains(@name,'fileuploadfield')]
project.text.uploadComplete=//label[contains(text(),'Upload Complete')]
project.button.create.save=//span[text()='Save']
project.button.create.saveAsDraft=//a[text()='Save As Draft']
project.button.create.cancel=//a[text()='Cancel']
project.tab.create.details=//span[contains(text(),'Details')]
project.button.create.newTask=//span[contains(text(),'New Task')]
project.tab.create.tasks=//span[text()='Tasks']

#Create project with SaveAsDraft
project.button.saveAsDraft=//a[text()='Save As Draft']
project.saveAsDraft.alertBox.mandatoryProjectName=(//div[contains(@id,'message-') and not(contains(@class,'x-box-target'))])[1]
project.saveAsDraft.text.alertMsg=//div[contains(text(),'Name is a required field.')]
project.saveAsDraft.button.ok=//div[contains(text(),'Name is a required field.')]/following::a

#Create project from template
project.button.newProjectFromTemplate=//span[contains(text(),'New Project From Template')]
project.field.template=//span[text()='Template:']/following::input[1]
#project.field.newProjectName=//input[contains(@name,'projectName')]
project.button.template.isCopyTask=//input[contains(@name,'isCopyTasks')]
project.button.template.isCopyReviews=//input[contains(@name,'isCopyReviews')]
project.button.template.isCopyBudgetedExpenses=//input[contains(@name,'isCopyBudgetedExpenses')]
project.button.template.isCopyTeam=//input[contains(@name,'isCopyProjectTeam')]
project.button.template.isCopyFiles=//input[contains(@name,'isCopyFiles')]
project.button.template.isCopyTags=//input[contains(@name,'isCopyTags')]
project.field.projectShedule=//span[text()='Project Schedule:']/following::input[1]
project.field.projectReview=//span[text()='Schedule Project Reviews:']/following::input[1]
project.radioButton.yes=//label[contains(text(),'Yes')]
project.radioButton.no=//label[contains(text(),'No')]
project.button.template.continue=(//a[text()='Cancel'])[1]/parent::span/parent::div/a
project.button.template.cancel=(//a[text()='Cancel'])[1]/parent::span/parent::div/a/following::span[1]
project.button.template.comboList=//input[contains(@name,'template')]/following::div[1]
project.template.comboBox.field.templateName=//li[contains(text(),'Direct Mail Template')]
project.template.comboBox.field.timeApproverName=//li[contains(text(),'AutoTester, Paresh')]

project.popup.button.yes=//span[text()='Yes']
project.popup.button.no=//span[text()='No']
project.template.requireAlertMsg=//div[text()='This field is required'] 
project.field.template.billingType=//span[contains(text(),'Billing Type:') and not(contains(@id,'display'))]/following::input[1]
project.field.template.billingStatus=//span[contains(text(),'Billing Status:') and not(contains(@id,'display'))]/following::input[1]
project.field.template.dueDate=//span[contains(text(),'Due Date:') and not(contains(@id,'display'))]/following::input[1]

#copy project
project.create.copyProject.projectName=//span[contains(text(),'Project Name:') and contains(@id,'text')]/following::input[1] 
#Calender view
project.button.menuCalenderView=//span[contains(text(),'Calendar View') and contains(@id,'menuitem')]
project.button.calenderView=//span[contains(text(),'Calendar View') and contains(@id,'button')]
project.button.calenderView.refresh=//span[contains(text(),'Active Projects')]/following::a[1]//span[contains(text(),'Calendar View')]/following::a[3]/span/span
project.calenderPanel.body=//div[contains(@id,'calendarpanel') and contains(@id,'body')]
project.calenderView.button.previousMonth=//div[contains(@id,'projectcalenderview') and not(contains(@id,'body'))]/div/div[contains(@data-ref,'innerCt')]/div/label[1]
project.calenderView.text.actualMonth=//div[contains(@id,'projectcalenderview') and not(contains(@id,'body'))]/div/div[contains(@data-ref,'innerCt')]/div/label[2]
project.calenderView.button.nextMonth=//div[contains(@id,'projectcalenderview') and not(contains(@id,'body'))]/div/div[contains(@data-ref,'innerCt')]/div/label[3]
project.calenderPanel.projectName=//div[contains(@id,'calendarpanel') and contains(@id,'month-wk-0')]/table[2]/tbody/tr[2]
project.calenderView.text.projectName=//div[contains(@id,'calendarpanel') and contains(@id,'month-wk-0')]/table[2]/tbody/tr[2]/td/div
project.viewProject.text.projectName=//label[contains(@id,'customLabel') and contains(text(),'AUTO')]
project.button.calenderView.addTag=//span[text()='Add Tag']
project.diaglogBox.calenderView.addTag=//div[contains(@id,'tagwindow') and contains(@data-componentid,'tagwindow')]
project.diaglogBox.button.cancel=//a[text()='Cancel']
project.button.calenderView.saveAsPDF=//span[text()='Add Tag']/following::a//span[contains(text(),'Save As PDF') and contains(@id,'button')]
project.button.calenderView.manageNotes=//span[contains(text(),'Manage Notes') and contains(@id,'button')]
project.dialogBox.calenderView.manageNotes=//div[contains(@id,'viewnotes') and contains(@data-componentid,'viewnotes')]
project.dialogbox.button.closeDialogBox=//div[contains(@id,'viewnotes') and contains(@id,'header') and contains(@id,'title') and contains(text(),'Notes')]/following::div[contains(@data-qtip,'Close panel')]
project.button.calenderView=//span[contains(text(),'Calendar View') and not(contains(@id,'menuitem'))]
project.button.calenderView.menuListView=//span[contains(text(),'List View')]
project.button.calenderView=//span[contains(text(),'Calendar View') and contains(@id,'button')]
project.button.menuList=//span[contains(text(),'List View') and contains(@id,'menuitem')]

# Project module dropdown
project.tab.addtofavoritelist=//span[text()='Add To Favorites']
project.link.favoritelist=//a[contains(@data-componentid,'favouriteListBtn')]
project.field.favoritelist=//div[contains(@data-ref,'outerCt') and contains(@id,'mainfavourites')]/div/div/div
project.tab.viewproject=//span[text()='View Project']
project.text.viewProject.projectName=//div[contains(@id,'projectnavigation') and contains(@id,'formWrap')]//div[contains(@id,'toolbar') and contains(@id,'innerCt')]/div/label[contains(@id,'customLabel')]
project.button.viewProject.addTag=//span[text()='Add Tag']
project.dialogBox.viewProject.addTag=//div[contains(@id,'tagwindow') and contains(@data-componentid,'tagwindow')]
project.button.viewCancel=//a[text()='Cancel']
project.button.viewProject.saveAsPDF=//span[text()='Add Tag']/following::a//span[contains(text(),'Save As PDF') and contains(@id,'button')]
project.button.viewproject.manageNotes=//span[contains(text(),'Manage Notes') and contains(@id,'button')]
project.dialogBox.manageNotes=//div[contains(@id,'viewnotes') and contains(@data-componentid,'viewnotes')]
project.dialogBox.manageNotes.closePanel=//div[contains(@role,'toolbar') and contains(@id,'viewnotes')]//div[contains(@id,'tool') and contains(@data-ref,'toolEl')]
project.tab.modifyproject=//span[text()='Modify Project']
project.modifyProject.dialogBox=//div[contains(@role,'dialog') and contains(@id,'window')]
project.modifyProject.dialogBox.submitButton=//span[contains(text(),'Submit')]
project.tab.viewprojecttab=(//a[text()='Projects'])[1]
project.tab.summarytab=(//span[text()='Summary'])[1]
project.tab.tasks=(//span[text()='Tasks'])[1]
project.tab.reviews=(//span[text()='Reviews'])[2]
project.tab.timeline=//span[text()='Timeline']
project.tab.finances=//span[text()='Finances']
project.tab.team=(//span[text()='Team'])[1]
project.tab.files=(//span[text()='Files'])[1]
project.tab.notes=(//span[text()='Notes'])[2]
project.button.actions=//span[contains(text(),'Actions') and not(contains(@id,'button'))]
project.field.projectName=//span[contains(text(),'Project Name:')]/following::input[1]
project.field.description=//textarea[@name='description' and @data-ref='inputEl']
project.field.projectType=(//input[@role='combobox'])[1]
project.field.marketingObjective=(//textarea[@data-ref='inputEl'])[2]
project.field.targetAudiance=(//input[contains(@data-componentid,'textfield')])[2]
project.field.client=//input[contains(@name,'clientId')]
project.field.projectStatus=//input[contains(@name,'projectStatus')]
project.field.projectTimeApprover=//span[contains(text(),'Project Time Approver:') and not(contains(@id,'display'))]/following::input[1]
project.field.billingType=//span[text()='Billing Type:']/following::input[1]
project.field.billingStatus=//span[text()='Billing Status:']/following::input[1]
project.button.modifySave=//a[text()='Cancel']/preceding::a[2]/span/span/span[2]
project.button.modifyCancel=//a[text()='Cancel']
project.button.yes=//span[text()='Yes']
project.field.modifyProjectName=//span[text()='Project Name:']/following::input[1]
project.field.plannedStartDate=//span[contains(text(),'Planned Start Date:') and not(contains(@id,'display'))]/following::input[1]
project.field.dueDate=//span[contains(text(),'Due Date:') and not(contains(@id,'display'))]/following::input[1]
project.field.typeOfMailer=//span[contains(text(),'Type of Mailer:')]/following::input[1]
project.field.sizeOfDirectmail=//span[contains(text(),'Size/Dimensions - Direct Mail:')]/following::input[1]
project.field.colorOfDirectMail=//span[contains(text(),'Colors - Direct Mail:')]/following::input[1]
project.field.quantityOfDirectMail=//span[contains(text(),'Quantity - Direct Mail:')]/following::input[1]
project.field.paperStock.matte=//label[contains(text(),'Matte')]
project.field.mailDropDate=//span[contains(text(),'Mail Drop Date:')]/following::input[1]
project.button.save=(//a[text()='Cancel']/parent::span)/parent::div/a/span


project.alertBox.mandatoryField=//div[@id='message-panel']
project.alertBox.invalidDate=(//div[contains(@id,'message-') and not(contains(@class,'x-box-target'))])[1]
project.text.dateAlertMsg=//div[contains(text(),'Start date should be less than End date')]
project.button.dateAlertMsg.ok=//div[contains(text(),'Start date should be less than End date')]/following::a
project.text.alertmsg=//div[text()='Your project cannot be saved until you have updated the fields highlighted in red.']
project.button.alertmsg.ok=//div[text()='Your project cannot be saved until you have updated the fields highlighted in red.']/following::a
project.button.yesbutton=//span[text()='Yes']
project.button.nobutton=//span[text()='No']
project.tab.setprojectstatus=//span[text()='Set Project Status']
project.tab.inProgress=//span[text()='In Progress']
project.tab.onHold=//span[text()='On Hold']
project.tab.complete=//span[text()='Complete']
project.tab.cancelled=//span[text()='Cancelled']
project.tab.copyAsNewProject=//span[text()='Set Project Status']/following::span[1]
project.tab.copyAsNewProject.cancel=//a[contains(text(),'Cancel')]
project.field.newProjectName=//span[contains(text(),'New Project Name:')]/following::input[1]
project.button.isCopyTask=//input[contains(@name,'isCopyTasks')]
project.button.isCopyReview=//input[contains(@name,'isCopyReviews')]
project.button.isCopyBudgetedExpenses=//input[contains(@name,'isCopyBudgetedExpenses')]
project.button.isCopyProjectTeam=//input[contains(@name,'isCopyProjectTeam')]
project.button.isCopyTags=//input[contains(@name,'isCopyTags')]
project.button.isCopyFiles=//input[contains(@name,'isCopyFiles')]
project.button.continue=(//a[text()='Cancel']/parent::span)/parent::div/a/span
project.text.errorMsg=//li[text()='This field is required']
project.text.blankprojectnamealertmsg=//div[text()='This field is required']
project.text.copyAsNewProject.dateAlertMsg=//div[contains(text(),'Start date should be less than End date')]
project.button.copyAsNewProject.cancel=//a[text()='Cancel']
project.button.copyAsNewProject.ok=//div[contains(text(),'Start date should be less than End date')]/following::a
project.alertMsg.popup.projectAdded=//div[contains(text(),'Project added successfully.')]
project.popupMsg.alertBox.addProject=//div[text()='Project added successfully.']

project.tab.projectName=(//table[contains(@id,'tableview')]/tbody/tr/td[2]/div/div/span[2])[1]
project.tab.projectListOfAction=(//div[contains(@id,'projectlistview') and contains(@id,'body')]//table[contains(@id,'tableview')]//img[contains(@id,'projectlistview')])[1]
project.text.projectName=(//div[contains(@id,'projectlistview')]//table[contains(@id,'tableview')]/tbody/tr/td[2]/div/div/span[2])[1]
project.field.copyAsNewProject.referenceTask=//span[contains(text(),'Reference Task:')]/following::input[1]
project.field.copyAsNewProject.ReferenceDate=//span[contains(text(),'Reference Date')]/following::input[1]
project.field.copyAsNewProject.projectOwner=//input[contains(@name,'project_task_role_tagfield')]
project.tab.copyAsNewProject.reviews=//span[text()='Reviews' and contains(@id,'tab')]
project.tab.copyAsNewProject.finances=//span[text()='Finances' and contains(@id,'tab')]
project.tab.copyAsNewProject.file=//span[contains(text(),'Files')]
project.text.copyAsNewProject.taskRecord=//div[contains(@id,'tasklist') and contains(@id,'-body')]//div[contains(text(),'No records to display.')]
project.text.copyAsNewProject.reviewRecord=//div[contains(@id,'reviewlistview') and contains(@id,'-body')]//div[contains(text(),'No records to display.')]
project.text.copyAsNewProject.financesRecord=//div[contains(@id,'expenseslist') and contains(@id,'-body')]//div[contains(text(),'No records to display.')]
project.text.copyAsNewProject.fileRecord=//div[contains(@id,'filelistview') and contains(@id,'-body')]//div[contains(text(),'No files to display.')]
project.button.copyAsNewProject.team=//span[contains(text(),'Team')]
project.button.copyAsNewProject.addGroup=//span[contains(text(),'Add Group')]
project.text.copyAsNewProject.tagsRecord=(//table[contains(@data-recordindex,'0')]/tbody)[1]/tr/td[8]/div/div
project.link.copyAsNewProject.showEstimated=//a[contains(text(),'Show Estimated')]
project.text.copyAsNewProject.noConflicts=//font[contains(text(),'No Conflicts')]
project.text.copyAsNewProject.showEstimatedAlertMsg=//div[contains(text(),'This Task Role has no associated users. A user must be selected to Show Estimated.')]
project.button.copyAsNewProject.showEstimatedAlertMsg.ok=//div[contains(text(),'This Task Role has no associated users. A user must be selected to Show Estimated.')]/following::a
project.field.copyAsNewProject.projectOwner=//input[contains(@name,'project_task_role_tagfield')]
project.dialogBox.copyAsNewProject.userResource=//div[contains(@data-componentid,'userUtilizationEstimationWindow')]
project.dialogBox.copyAsNewProject.userResourceClosePanel=//div[contains(@id,'userUtilizationEstimationWindow') and contains(@id,'header-innerCt')]//div[contains(@data-qtip,'Close panel')]
project.dialogBox.copyAsNewProject.userResourceDate=//img[contains(@src,'../../UI-INF/images/arrow-left.png')]/following::label[1]

#copy as new template
project.tab.copyAsTemplate=//span[contains(text(),'Copy As New Template')]
project.field.copyAsTemplate.templateName=//span[contains(text(),'New Template Name:')]/following::input[1]
project.copyAsNewTemplate.requiredField.alertMsg=//div[contains(text(),'Name is a required field.')]
project.copyAsNewTemplate.button.ok=//div[contains(text(),'Name is a required field.')]/following::a

#Add to campaign
project.tab.addToCampaign=//span[text()='Add To Campaign']
project.addToCampaign.popup.text=//div[contains(@id,'window') and contains(text(),'Add To Campaign')]
project.addToCampaign.selectCampaign=//input[contains(@name,'combo') and contains(@name,'inputEl')]
project.addToCampaign.add=//span[text()='Add']
project.addToCampaign.cancel=//a[text()='Cancel']
project.tab.removeFromCampaign=//span[text()='Remove From Campaign']
project.tab.goToCampaign=//span[text()='Go To Campaign']
project.tab.goToCampaign.details=//span[text()='Details']
project.alertMsg.addCampaign=//div[contains(text(),'Project(s) added to campaign successfully.')]
project.alertMsg.removeCampaign=//div[contains(text(),'Campaign project(s) removed successfully.')]


#Add to favorite list
project.text.addToFavorite.projectName=(//div[contains(@id,'mainfavourites') and contains(@id,'outerCt')]/div/div/div/div/table/tbody/tr/td[3]/div)[1]
project.addToFavorite.button.delete=(//div[contains(@id,'mainfavourites') and contains(@id,'outerCt')]/div/div/div/div/table/tbody/tr/td[4]/img)[1]

#Archive project
project.tab.archiveProject=//span[text()='Archive Project']
project.archiveProject.text.alertMsg=//div[text()='Project(s) archived successfully.']
project.activeProject.text.alertMsg=//div[text()='Project(s) activated successfully.']
project.tab.unArchiveProject=//span[text()='Unarchive Project']

#Add Note
project.tab.addNote=//span[contains(text(),'Add Note') and contains(@id,'menuitem')]
project.addNote.popup=//div[contains(@id,'addnote') and contains(@data-componentid,'addnote')]
project.addNote.popup.privateMessageButton=//label[text()='Private Message']
project.addNote.popup.sendEmailButton=(//label[contains(text(),'Send Email')])[3]
project.addNote.popup.uncheckSendEmailButton=(//label[contains(text(),'Send Email')])[1]
project.addNote.popup.addNoteButton=//a[contains(text(),'Cancel')]/following::a
project.addNote.popup.cancelButton=//a[text()='Cancel']
project.addNote.tagField.userName=//div[contains(text(),'AutoTester, Paresh')]
project.addNote.popup.selectUserTrigger=//div[contains(@id,'tagfield') and contains(@id,'trigger-picker')]
project.addNote.popup.fileUploadButton=//input[contains(@name,'fileuploadfield')]
project.addNote.text.uploadComplete=//label[contains(text(),'Upload Complete')]
project.addNote.popup.closePanelButton=//div[contains(@data-qtip,'Close panel')]
project.addNote.popup.messageBox=//div[contains(@id,'textarea') and contains(@id,'inputWrap') and not(contains(@id,'message'))]//textarea
project.addNote.popup.SelectUser=//div[contains(text(),'Select users or groups to whom this note should be directed . . .')]
project.addNote.popup.nameTester=//li[contains(text(),'AutoTester, Paresh')]
project.tab.notes=//span[text()='Files']/following::span/span[contains(text(),'Notes')]
project.text.addNoteText=(//div[contains(@id,'notegrid') and contains(@id,'body')]/div/div[2]/table/tbody/tr[1]/td/div)[1]/table/tbody/tr/td[2]/span[2]
project.link.addnote.ViewEntireThread=//a[contains(text(),'View Entire Thread ')]
project.addNote.button.delete=//img[contains(@data-qtip,'Delete')]
project.addNote.button.edit=//img[contains(@data-qtip,'Edit')]
project.addNote.button.reply=//img[contains(@data-qtip,'Reply')]
project.addNote.link.getLink=//img[contains(@data-qtip,'Get Link')]
project.addNote.text.deleteNote=//div[text()='Note deleted successfully.']
project.addNote.text.addedNote=//div[contains(text(),'Note added successfully.')]
project.addNote.button.refreshButton=//span[contains(text(),'Sort by')]/following::a[1]
#manage Note
project.tab.manageNotes=//span[contains(text(),'Manage Notes')]
project.manageNotes.popup=//div[contains(@data-componentid,'viewnotes')]
project.manageNote.popup.addNoteButton=//a[contains(text(),'Add Note')]
project.manageNote.popup.viewAllButton=//a[contains(text(),'View All')]
project.link.manageNotes.reply=(//div[contains(@id,'managenotegrid') and contains(@id,'body')]//table)[1]//a[contains(text(),'Reply')]
project.link.manageNotes.delete=(//div[contains(@id,'managenotegrid') and contains(@id,'body')]//table)[1]//a[contains(text(),'Delete')]
project.link.manageNotes.viewEntireThread=(//div[contains(@id,'managenotegrid') and contains(@id,'body')]//table)[1]//a[contains(text(),'View Entire Thread')]
project.button.closePanel=//div[contains(text(),'Notes')]/following::div[1]
project.link.addNote=//a[contains(text(),'Add Note')]
project.manageNotes.deleteButton=//div[contains(@id,'notepanel') and contains(@id,'innerCt')]/div[1]//img[contains(@data-qtip,'Delete')]
project.manageNotes.editButton=//div[contains(@id,'notepanel') and contains(@id,'innerCt')]/div[1]//img[contains(@data-qtip,'Edit')]
project.manageNotes.replyButton=//div[contains(@id,'notepanel') and contains(@id,'innerCt')]/div[1]//img[contains(@data-qtip,'Reply')]
project.manageNotes.getLinkButton=//div[contains(@id,'notepanel') and contains(@id,'innerCt')]/div[1]//img[contains(@data-qtip,'Get Link')]
project.manageNotes.textArea=//div[contains(@id,'textarea') and contains(@id,'inputWrap') and not(contains(@id,'message'))]//textarea
project.manageNotes.button.addNote=//span[contains(text(),'Add Note') and not(contains(@id,'menu'))]
project.manageNotes.button.cancel=//a[text()='Cancel']
project.manageNotes.alertMsg.deleteNote=//div[text()='Note deleted successfully.']
project.manageNote.button.updateNote=//span[text()='Update Note']
project.manageNote.alertMsg.updateNote=//div[text()='Note updated successfully.']
project.manageNote.popup.getLink=//div[contains(@id,'shareLinkWindow') and contains(@data-componentid,'shareLinkWindow')]
project.manageNote.popup.copyClipboardButton=//span[text()='Copy to Clipboard']
project.manageNote.popup.copyLinkCancelButton=//span[text()='Copy to Clipboard']/following::a[1]
project.manageNote.alertMsg.copyLink=//div[text()='The URL has been copied to your clipboard']
project.manageNote.popup.replyMessageTextBox=//div[contains(@id,'textarea') and contains(@id,'inputWrap') and not(contains(@id,'message'))]//textarea
project.manageNote.popup.replyCancelButton=//a[text()='Cancel']
project.manageNote.popup.replyAddNoteButton=//a[text()='Cancel']/following::span[1]
project.manageNote.alertMsg.reply=//div[text()='Note reply added successfully.']

#get Link
project.tab.getLink=//span[text()='Get Link']
project.getLink.popup=//div[contains(@id,'shareLinkWindow') and contains(@data-componentid,'shareLinkWindow')]
project.getLink.button.copyClipboard=//span[text()='Copy to Clipboard']
project.getLink.button.cancel=//span[text()='Copy to Clipboard']/following::a[1]
project.getLink.alertMsg.copyClipboard=//div[text()='The URL has been copied to your clipboard']

#project summary tab
project.name.summaryAction=(//table[contains(@id,'tableview')])[3]/tbody/tr[1]/td[2]//span[2]
project.tab.summary=//span[text()='Summary']
project.summary.recentActivity=(//div[contains(@id,'activitygrid') and contains(@id,'body')]//table[contains(@id,'tableview')])[1]//span
project.summary.button.settingIcon=//div[contains(@id,'panel') and contains(@id,'formWrap')]//a
project.summary.settingIcon.window=//div[contains(@id,'summaryTabSettingWindow') and contains(@data-componentid,'summaryTabSettingWindow')]
project.summary.settingIcon.burndownChart=//input[contains(@name,'128')]
project.summary.settingIcon.totalCost=//input[contains(@name,'64')]
project.summary.settingIcon.cancelButton=//a[contains(text(),'Cancel')]
project.summary.settingIcon.applyButton=//span[contains(text(),'Apply')]
project.summary.text.burndownChart=//label[contains(text(),'BURNDOWN CHART')]
project.summary.text.totalCost=//label[contains(text(),'TOTAL COST')]

project.summary.text.projectName=//span[text()='Project Name']
project.summary.text.plannedStartDate=//span[text()='Planned Start Date']
project.summary.text.dueDate=//span[text()='Due Date']
project.summary.text.projectStatus=Project Status
project.summary.text.onShedule=//label[text()='ON SCHEDULE']
project.summary.text.onBudget=//label[text()='ON BUDGET']
project.summary.text.taskOverdue=//label[text()='Tasks Overdue']
project.summary.text.blockingTask=//label[text()='Blocking Tasks']
project.summary.text.approvalsOverdue=//label[text()='Approvals Overdue']
project.summary.text.taskBlocked=//label[text()='Tasks Blocked']
project.summary.number.taskOverdue=((//div[contains(@id,'panel') and contains(@id,'formWrap')]//table)[1]//div)[1]
project.summary.number.blockingTask=((//div[contains(@id,'panel') and contains(@id,'formWrap')]//table)[1]//div)[2]
project.summary.number.approvalsOverdue=((//div[contains(@id,'panel') and contains(@id,'formWrap')]//table)[2]//div)[1]
project.summary.number.tasksBlocked=((//div[contains(@id,'panel') and contains(@id,'formWrap')]//table)[2]//div)[2]


#delete project
project.tab.deleteProject=//span[contains(text(),'Delete Project')]
project.text.alertMsg.deleteProject=//div[contains(text(),'Project(s) deleted successfully.')]


# project Task
project.tab.task.projectName=(//table[contains(@id,'tableview')]/tbody/tr/td[2]/div/div/span[2])[4]
project.tab.tasks=//span[text()='Tasks']
project.button.task.newTask=//span[text()='New Task']
project.button.task.importTask=//span[text()='Import Tasks']
project.button.task.shedulingView=//span[text()='Scheduling View']
project.button.task.menuListView=//span[contains(text(),'List View') and contains(@id,'menuitem')]
project.button.task.listView=//span[contains(text(),'Import Tasks')]/following::a[contains(@data-qtip,'List View')]
project.button.task.exportGanntChart=//span[text()='Scheduling View']/following::a[2]
project.button.task.exportTaskList=//a[contains(@data-qtip,'Export Task List')]//span[contains(@data-ref,'btnIconEl')]
project.button.task.refresh=//span[text()='Scheduling View']/following::a[3]
project.field.task.taskName=//span[contains(text(),'Task Name:')]/following::input[1]
project.field.task.assignTo=//span[contains(text(),'Assigned to:')]/following::input[1]
project.label.task.otherUsers=//div[contains(text(),'Other Users')]
project.field.task.taskRole=//span[contains(text(),'Task Role:')]/following::input[1]
project.field.task.taskId=//span[contains(text(),'Task ID:')]/following::input[1]
project.field.task.predecessor=//span[contains(text(),'Predecessor(s):')]/following::input[1]
project.field.task.startDate=//span[contains(text(),'Start Date:') and contains(@id,'datefield')]/following::input[1]
project.field.task.dueDate=//span[contains(text(),'Due Date:') and contains(@id,'datefield')]/following::input[1]
project.field.task.taskStatus=//span[contains(text(),'Task Status:')]/following::input[1]
project.field.task.taskDescription=//span[contains(text(),'Task Description:')]/following::textarea
project.button.task.save=//a[contains(text(),'Cancel')]/preceding::a[3]//span[contains(@id,'button') and contains(@id,'btnInnerEl')]
project.button.task.cancel=//a[contains(text(),'Cancel')]
project.button.task.saveAndAddAnother=//a[contains(text(),'Save and Add another')]
project.task.alertMsg.popup=//div[contains(@id,'message-panel-innerCt')]
project.task.alertMsg=//div[contains(text(),'Please correct the fields highlighted in red.')]
project.task.alertMsg.okButton=//div[contains(text(),'Please correct the fields highlighted in red.')]/following::a
project.task.alertMsg.datevalidation=//div[contains(text(),'Task start date is greater than due date.')]
project.task.dateAlertMsg.okButton=//div[contains(text(),'Task start date is greater than due date.')]/following::a
project.task.warningMsg.YesButton=//span[contains(text(),'Yes')]
project.task.waringMsg.noButton=//span[text()='No']
project.task.warningMsg.deleteTask=//div[contains(text(),'Tasks deleted successfully.')]
project.task.warningMsg.addedTask=//div[contains(text(),'Task added successfully.')]
project.task.warningMsg=//div[contains(@id,'window') and contains(@data-componentid,'window')]
project.task.warningMsg.taskDateExceed=//div[contains(text(),'Warning: Task date(s) exceed your Project/Campaign date(s).') and contains(@id,'window')]
project.task.warningMsg.sheduleOverlap=//div[contains(text(),'Warning: Task(s) in your schedule overlap.') and contains(@id,'window')]
project.task.button.submit=//span[contains(text(),'Submit')]
project.task.projectTaskAction=(//img[contains(@id,'tasklist')])[1]
project.projectTaskAction.tab.delete=//span[contains(text(),'Delete Task')]
project.createTask.button.actions=//span[contains(text(),'Actions') and not(contains(@id,'button'))]
project.createTask.actions.saveAsPDF=//span[contains(text(),'Save As PDF') and not(contains(@id,'button'))]
project.button.taskList.check=//div[contains(@id,'tasklist') and contains(@id,'innerCt')]//div[contains(@id,'tasklist') and contains(@id,'body')]//table[contains(@id,'tableview')]/tbody/tr[1]/td[1]/div/div

project.projectTaskAction.modifyTask=//span[contains(text(),'Modify Task')]
project.task.alertMsg.taskUpdate=//div[contains(text(),'Task updated successfully.')]

project.projectTaskAction.setTaskStatus=//span[contains(text(),'Set Task Status')]
project.projectTaskAction.setTaskStatus.inProgress=//span[contains(text(),'In Progress')]
project.task.alertMsg.taskStatusUpdate=//div[contains(text(),'Task status updated successfully.')]
#project.field.task.taskStatus=(//img[contains(@id,'tasklist')])[1]/following::td[6]/div
project.field.task.projectName=(//img[contains(@id,'tasklist')])[1]/following::td[1]/span
project.task.taskDetailsWindow=//div[contains(@id,'taskwindow') and contains(@data-componentid,'taskwindow')]
project.task.taskDetailsWindow.status=//span[contains(text(),'STATUS ')]
project.task.taskDetailsWindow.statusName=//span[contains(text(),'STATUS ')]/following::div[2]
project.task.taskDetailsWindow.closePanel=//div[contains(@data-qtip,'Close panel')]

project.projectTaskAction.tab.addToFavorites=//span[contains(text(),'Add To Favorites')]
project.task.alertMsg.taskAddToFavorite=//div[contains(text(),'Favorite(s) added successfully.')]
project.task.alertMsg.taskDeleteFromFavorite=//div[contains(text(),'Favorite deleted successfully.')]
project.button.favoritesList=//a[contains(@id,'favourite')]
project.task.addToFavoriteList.taskName=(//div[contains(@id,'mainfavourites') and contains(@id,'outerCt')]/div/div/div/div/table/tbody/tr/td[3]/div)[1]

project.projectTaskAction.tab.addNote=//span[contains(text(),'Add Note')]
project.task.addNote.popup=//div[contains(@id,'addnote') and contains(@data-componentid,'addnote')]
project.task.addNote.sendEmailbutton=//label[text()='Private Message']/following::div[2]//label[text()='Send Email']
project.task.addNote.privateMessage=//label[text()='Private Message']
project.task.addNote.messageBox=//div[contains(@id,'textarea') and contains(@id,'inputWrap') and not(contains(@id,'message'))]//textarea
project.task.addNote.fileUploadButton=//input[contains(@name,'fileuploadfield')]
project.task.addNote.uploadComplete=//label[contains(text(),'Upload Complete')]
project.task.addNote.addNoteButton=//span[contains(text(),'Add Note') and not(contains(@id,'menu'))]
project.task.addNote.cancelButton=//a[text()='Cancel']
project.task.addNote.closePanelButton=//div[contains(@data-qtip,'Close panel')]
project.task.addNote.noteAdded=//div[contains(text(),'Note added successfully.')]
project.task.addNote.noteDeleted=//div[text()='Note deleted successfully.']

project.projectTaskAction.tab.manageNote=//span[text()='Manage Notes']
project.task.manageNote.popup=//div[contains(@data-componentid,'viewnotes')]
project.link.task.manageNote.replyButton=(//div[contains(@id,'managenotegrid') and contains(@id,'body')]//table)[1]//a[contains(text(),'Reply')]
project.link.task.manageNote.deleteButton=(//div[contains(@id,'managenotegrid') and contains(@id,'body')]//table)[1]//a[contains(text(),'Delete')]
project.link.task.manageNote.viewEntireThread=(//div[contains(@id,'managenotegrid') and contains(@id,'body')]//table)[1]//a[contains(text(),'View Entire Thread')]
project.button.task.manageNote.closePanel=//div[contains(text(),'Notes') and contains(@id,'viewnotes')]/following::div[contains(@data-qtip,'Close panel')]
project.button.task.manageNote.addNoteButton=//a[contains(text(),'Add Note')]
project.task.manageNotes.deleteButton=//div[contains(@id,'notepanel') and contains(@id,'innerCt')]/div[1]//img[contains(@data-qtip,'Delete')]
project.task.manageNotes.editButton=//div[contains(@id,'notepanel') and contains(@id,'innerCt')]/div[1]//img[contains(@data-qtip,'Edit')]
project.task.manageNotes.replyButton=//div[contains(@id,'notepanel') and contains(@id,'innerCt')]/div[1]//img[contains(@data-qtip,'Reply')]
project.task.manageNotes.getLinkButton=//div[contains(@id,'notepanel') and contains(@id,'innerCt')]/div[1]//img[contains(@data-qtip,'Get Link')]

project.task.manageNote.selectUser=//div[contains(@id,'tagfield') and contains(@id,'listWrapper')]
project.task.manageNote.updateTextMessage=//div[contains(@id,'textarea') and contains(@id,'inputWrap')]/textarea
project.task.manageNote.updateNoteButton=//span[text()='Update Note']
project.task.manageNote.alertMsg.updateNote=//div[text()='Note updated successfully.']
project.task.manageTask.replyMessage=//div[contains(@id,'textarea') and contains(@id,'inputWrap')]/textarea
project.task.manageTask.replyAddNoteButton=//span[contains(text(),'Add Note') and contains(@id,'button')]
project.task.manageNote.alertMsg.reply=//div[text()='Note reply added successfully.']
project.task.manageNote.popup.getLink=//div[contains(@id,'shareLinkWindow') and contains(@data-componentid,'shareLinkWindow')]
project.task.manageNote.popup.copyClipboardButton=//span[text()='Copy to Clipboard']
project.task.manageNote.popup.copyLinkCancelButton=//span[text()='Copy to Clipboard']/following::a[1]
project.task.manageNote.alertMsg.copyLink=//div[text()='The URL has been copied to your clipboard']
project.task.manageNotes.alertMsg.deleteNote=//div[text()='Note deleted successfully.']

project.task.button.getLink=//span[contains(text(),'Get Link')]
project.task.getLink.popup=//div[contains(@id,'shareLinkWindow') and contains(@data-componentid,'shareLinkWindow')]
project.task.getLink.copyClipBoardButton=//span[text()='Copy to Clipboard']
project.task.getLink.copyLinkCancelButton=//span[text()='Copy to Clipboard']/following::a[1]
project.task.alertMsg.copyLink=//div[text()='The URL has been copied to your clipboard']

project.task.tab.taskID=//div[contains(@id,'taskschedulingview') and contains(@id,'innerCt')]//div[contains(@id,'panel') and contains(@id,'body') and not(contains(@id,'gantt'))]//div[contains(@id,'headercontainer') and contains(@id,'innerCt')]/div/div[2]//span[text()='TASK ID']
project.taskList.page.text=(//div[contains(@id,'custompagingbar') and contains(@id,'innerCt')])[2]/div/div[9]
project.taskList.pageTextBox.number=(//div[contains(@id,'custompagingbar') and contains(@id,'innerCt')])[2]/div/div[7]/div/div[1]//input
project.taskList.page.previous=(//div[contains(@id,'custompagingbar') and contains(@id,'innerCt')])[2]/div/a[2]
project.taskList.taskName=//div[contains(@id,'taskschedulingview') and contains(@id,'innerCt')]//div[contains(@id,'panel') and contains(@id,'body') and not(contains(@id,'gantt'))]//div[contains(@id,'tasklist') and contains(@id,'body')]//table[contains(@id,'tableview')][1]/tbody/tr/td//table/tbody/tr/td[2]/span
project.task.alertMsg.startDateIsOnWeekend=//div[contains(text(),'start date is on weekend.')]
project.task.alertMsg.startDateIsOnweeked.okButton=//div[contains(text(),'start date is on weekend.')]/following::a
project.task.alertMsg.dueDateIsOnWeekend=//div[contains(text(),'due date is on weekend.')]
project.task.alertMsg.dueDateIsOnWeekend.okButton=//div[contains(text(),'due date is on weekend.')]/following::a
project.task.alertMsg.startDateIsOnHollyday=//div[contains(text(),'Task start date is on a holiday.')]
project.task.alertMsg.startDateIsOnHollyday.okButton=//div[contains(text(),'Task start date is on a holiday.')]/following::a
project.task.alertMsg.dueDateIsOnHollyday=//div[contains(text(),'Task due date is on a holiday.')]
project.task.alertMsg.dueDateIsOnHollyday.okButton=//div[contains(text(),'Task due date is on a holiday.')]/following::a

# Project Review
project.review.button.newReview=//span[text()='New Review']
project.review.button.activeReview=//span[text()='Active Reviews']
project.review.button.menuArchiveReview=//span[contains(text(),'Archived Reviews') and contains(@id,'menuitem')]
project.review.button.archiveReview=//span[contains(text(),'Archived Reviews') and contains(@id,'button')]
project.review.button.menuActiveReview=//span[contains(text(),'Active Reviews') and contains(@id,'menuitem')]
project.review.button.listView=//span[text()='Active Reviews']/following::span[contains(text(),'List View') and contains(@id,'button')]
project.review.button.menuListView=//span[contains(text(),'List View') and contains(@id,'menuitem')]
#project.review.button.menuListView=//span[contains(text(),'List View') and contains(@id,'menuitem')]
#project.review.listView=//div[contains(@id,'reviewlistview') and contains(@id,'body')]
project.review.button.menuThumbnailView=//span[contains(text(),'Thumbnail View') and contains(@id,'menuitem')]
project.review.button.thumbnailView=//span[contains(text(),'Thumbnail View') and contains(@id,'button')]
project.review.thumbnailView=//div[contains(@id,'reviewthumbnailview') and contains(@id,'body')]
project.review.button.exportListView=//a[contains(@data-qtip,'Export Review List')]
project.review.button.refreshButton=//a[contains(@data-qtip,'Export Review List')]/following::a[1]
project.review.button.settingButton=//a[contains(@data-qtip,'Export Review List')]/following::a[2]
project.review.thumbnailView.reviewActionButton=(//a[contains(text(),'Review Actions ')])[1]

project.review.headercolumn.review=(//div[contains(@id,'projectreviewviewpanel') and contains(@id,'body')]//div[contains(@id,'headercontainer') and contains(@id,'innerCt')])[1]/div/div[2]//span[text()='REVIEW']
project.review.headercolumn.ofCommentsTab=(//div[contains(@id,'projectreviewviewpanel') and contains(@id,'body')]//div[contains(@id,'headercontainer') and contains(@id,'innerCt')])[1]/div/div[4]//span[text()='# OF COMMENTS']
project.review.headercolumn.ofNotesTab=(//div[contains(@id,'projectreviewviewpanel') and contains(@id,'body')]//div[contains(@id,'headercontainer') and contains(@id,'innerCt')])[1]/div/div[5]//span[text()='# OF NOTES']
project.review.headercolumn.startDateTab=(//div[contains(@id,'projectreviewviewpanel') and contains(@id,'body')]//div[contains(@id,'headercontainer') and contains(@id,'innerCt')])[1]/div/div[6]//span[text()='START DATE']

project.review.reviewList=//div[contains(@id,'projectreviewviewpanel-body')]//div[contains(@id,'reviewlistview') and contains(@id,'body')]
project.review.reviewHeader=//div[contains(@id,'projectreviewviewpanel-body')]//div[contains(@id,'headercontainer') and contains(@id,'innerCt')]/div/div[2]//span[contains(text(),'REVIEW')]
project.field.review.reviewName=//span[contains(text(),'Review Name:')]/following::input[1]
project.field.review.type=//span[contains(text(),'Type:')]/following::input[1][contains(@id,'combo')]/following::div[1]
project.field.review.type.commentsOrFeedback=//li[contains(text(),'Comments/Feedback')]
project.field.review.status=//input[contains(@name,'statusId')]/following::div[1]
project.filed.reviewStatus.inProgress=//li[contains(text(),'In Progress')]
project.field.review.startDate=//span[contains(text(),'Start Date:')]/following::input[1]
project.field.review.dueDate=//span[contains(text(),'Due Date:')]/following::input[1]
project.field.review.emailAddress=//span[contains(text(),'Email Address:')]/following::input[1]
project.field.review.emailSearch.button=//a[contains(@data-qtip,'Select Reviewers/Review Groups')]/span
project.field.review.emailSearch.popup=//div[contains(@role,'dialog') and contains(@id,'window')]
project.field.review.emailSearch.popup.selectGroup=//span[contains(text(),'Select Group:')]/following::div[1]/div[1]/div[contains(@id,'combo') and contains(@id,'trigger-picker')]
project.review.emailSearch.popup.selectUserRadioButton=//div[contains(@role,'dialog') and contains(@id,'window')]//div[contains(@id,'window') and contains(@id,'body')]//div[contains(@role,'grid')]//table[contains(@id,'tableview')]/tbody/tr/td/div[1]/div
project.review.reviewOptions.secondRadioButton=//label[contains(text(),'Notify Review Owners on response submission')]
project.review.reviewOptions.fourthRadioOption=//label[contains(text(),'Notify comment author on reply')]
project.review.addContent.comboBoxButton=//span[contains(text(),'Add Content:') and contains(@id,'combo')]/following::div[1]//div[contains(@id,'combo') and contains(@id,'trigger-picker')]
project.review.addContent.addWebSiteByURL=//li[contains(text(),'Add web site by URL')]
project.review.addContent.addWebSiteByUrl.popup=//div[contains(@role,'dialog') and contains(@id,'window')]
project.review.addContent.addWebSiteByUrl.text=//div[contains(text(),'Add website by URL')]
project.review.addContent.addWebSiteByUrl.enterUrl=//span[contains(text(),'Enter Website Url:')]/following::input[1]
project.review.addConyent.addWebSiteByUrl.uploadButton=//span[contains(text(),'Upload')]
project.review.addContent.addWebSiteByUrl.cancelButton=//span[contains(text(),'Cancel')]
project.review.addContent.uploadWebSiteAsZip=//li[contains(text(),'Upload web site as zip')]
project.review.addContent.uploadWebSiteAsZip.popup=//div[contains(@role,'dialog')]
project.review.addContent.uploadWebSiteAsZip.text=//div[contains(text(),'Upload website as Zip')]
project.review.addContent.uploadWebSiteAsZip.uploadButton=//span[contains(text(),'Upload')]
project.review.addContent.uploadWebSiteAsZip.SelectFilesButton=//div[contains(@role,'dialog')]//input[contains(@id,'fileuploadfield') and contains(@id,'button')]
project.review.addContent.uploadWebSiteAsZip.removeButton=//a[contains(text(),'Remove')]
project.review.addContent.addFilesFromProject=//li[contains(text(),'Add file(s) from project')]
project.review.addContent.addFilesFromProject.popup=//div[contains(@role,'dialog') and contains(@id,'window')]
project.review.addContent.addFilesFromProject.text=//div[contains(text(),'Add files from Project')]
project.review.addContent.addFilesFromeProject.selectFileName=//span[contains(text(),'Select a file name:')]/following::div[contains(@id,'combo') and contains(@id,'trigger-picker')]
project.review.addContent.addFilesFromProject.fileName=//span[contains(text(),'Select a file name:')]/following::input
project.review.addContent.addFilesFromProject.selectButton=//span[text()='Select']
project.review.addContent.addFilesFromProject.cancelButton=//div[contains(@role,'dialog') and contains(@id,'window')]//span[text()='Cancel']
project.review.addContent.addFilesFromLibrary=//li[contains(text(),'Add file(s) from library')]
project.review.addContent.addFilesFromlibrary.popup=//div[contains(@role,'dialog') and contains(@id,'library')]
project.review.addContent.addFilesFromLibrary.text=//div[contains(text(),'Add file from Library')]
project.review.addContent.addFilesFromLibrary.data=//div[contains(@role,'dialog') and contains(@id,'library')]//div[contains(@data-componentid,'dataview')]/div//img
project.review.addContent.addFilesFromLibrary.selectButton=//span[contains(text(),'Select') and not(contains(@id,'fileupload')) and contains(@id,'button')]

project.review.fileAction.button=//div[contains(@id,'reviewfile') and contains(@id,'innerCt')]/div[1]/div/div/div[2]//img[contains(@id,'reviewfile')]
project.review.fileAction.renameButton=//span[contains(text(),'Rename')]
project.review.rename.popup=//div[contains(@role,'dialog') and contains(@id,'window')]
project.review.rename.popupText=//div[contains(text(),'Rename File')]
project.review.rename.popup.field=//textarea[contains(@name,'textarea')]
project.review.text.fileName=//div[contains(@id,'reviewfile') and contains(@id,'innerCt')]/div[1]/div/div/div[2]//span/span
project.review.rename.popup.updateButton=//span[contains(text(),'Update')]
project.review.rename.popup.cancelButton=//span[contains(text(),'Cancel')]
project.review.fileAction.setAsDefaultThumbnailButton=//span[contains(text(),'Set as default thumbnail')]
project.review.fileAction.deleteAllVersion=//span[contains(text(),'Delete All Versions')]
project.review.fileAction.deleteAllversion.yesButton=//span[contains(text(),'Yes')]

project.review.reviewGridView=//div[contains(@id,'reviewlistview')]//table[contains(@id,'tableview') and contains(@id,'record')]
project.review.reviewActionButton=//div[contains(@id,'reviewlistview')]//table[contains(@id,'tableview') and contains(@id,'record')]//img[1]
project.review.reviewAction.viewReview=//span[(text()='View Review')]
project.review.viewReview.reviewActionsButton=//span[(text()='Review Actions')]
project.review.viewReview.downloadIconButton=//img[contains(@data-qtip,'Download review file')]
project.review.viewReview.openMarkupReview=//a[contains(text(),'Open Markup View ')]
project.review.viewReview.addVersionButton=//a[(text()=' Add Version ')]
project.review.viewReview.manageVersionButton=//a[contains(text(),'Manage Versions')]

project.review.viewReview.addVersionPopup=//div[contains(@role,'dialog') and contains(@data-componentid,'window')]
project.review.viewReview.addContentListButton=//span[contains(text(),'Add Content:') and contains(@id,'combo')]/following::div[contains(@id,'combo') and contains(@id,'trigger-picker')]
project.review.viewReview.addFileFromProject=//li[contains(text(),'Add file(s) from project')]
project.review.viewReview.addFileFromLibrary=//li[contains(text(),'Add file(s) from library')]
project.review.addVersionPopup.selectFile=//div[contains(@role,'dialog') and contains(@id,'window')]//span[contains(text(),'Select File')]
project.review.addVersionPopup.cancelButton=//span[contains(text(),'Cancel')]
project.review.addVersionPopup.addButton=//span[contains(text(),'Cancel')]//following::span[1]
project.review.addVersionPopup.reviewProgressBar=//div[contains(@role,'dialog') and contains(@id,'window')]//div[contains(@id,'reviewprogressbar') and contains(@id,'innerCt')]
project.review.addVersionPopup.reviewVersionAdded=//div[contains(text(),'Review version added successfully.')]

project.button.review.emailSearch.popup.cancelButton=(//a[contains(text(),'Cancel')])[2]
project.button.review.emailSearch.popup.addButton=(//a[contains(text(),'Cancel')])[2]/following::a//span[contains(@id,'button') and contains(@id,'btnInnerEl')]

project.field.review.emailNotificationSubject=//span[contains(text(),'Email Notification Subject:')]/following::input[1]
project.field.review.emailNotificationMessage=//span[contains(text(),'Email Notification Message:')]/following::textarea
project.field.review.uploadFile=//input[contains(@id,'fileuploadfield') and contains(@id,'button')]
project.review.reviewProgressBar=//div[contains(@id,'reviewprogressbar') and contains(@id,'innerCt')]
project.review.file=//div[contains(@id,'reviewprogressbar') and contains(@id,'innerCt')]//img

project.review.alertMsg.popup=//div[contains(@id,'message-panel-body')]
project.review.alertMsg.mandatoryField=//div[contains(text(),'Please correct the fields highlighted in red.')]
project.review.alertMsg.okButton=//div[contains(text(),'Please correct the fields highlighted in red.')]/following::a
project.review.alertMsg.deletedReview=//div[contains(text(),'Review(s) deleted successfully.')]
project.review.alertMsg.addedReview=//div[contains(text(),'Review added successfully.')]
project.review.button.save=(//a[text()='Cancel'])[1]/parent::span/parent::div/a//span[contains(@id,'btnInnerEl')]
project.review.button.cancel=//a[contains(text(),'Cancel')]
project.review.button.yes=//span[contains(text(),'Yes')]

project.review.projectReviewAction=//div[contains(@id,'projectreviewviewpanel-body')]//div[contains(@id,'reviewlistview') and contains(@id,'body')]//table[contains(@id,'tableview')][1]/tbody/tr[1]/td[2]//img[contains(@id,'reviewlistview')]
project.review.reviewAction.reviewDelete=//span[contains(text(),'Delete Review')]

#project filter functionality
project.button.filterBy.favoriteButton=//span[contains(text(),'Favorites')]
project.text.message.filterByFavoriteApplied=//div[contains(text(),'Filter By Favorites applied')]
project.button.filterByFavoriteApplied.close=//div[contains(text(),'Filter By Favorites applied')]/following::a[1]
project.button.filterBy.columnButton=//span[contains(text(),'Column')]
project.button.filterBy.tagsButton=//span[contains(text(),'Tags')]
project.popup.filterByTags=//div[contains(@id,'filtertagwindow') and contains(@data-componentid,'filtertagwindow')]
project.popup.filterByTags.cancelButton=//a[contains(text(),'Cancel')]
project.popup.filterByTags.submitButton=//a[contains(text(),'Cancel')]/following::span[contains(@id,'button') and contains(@id,'btnEl')]
project.popup.filterByTags.checkRadioButton=//div[contains(@id,'grid') and contains(@id,'body') and not(contains(@id,'activity'))]//table[contains(@id,'tableview')]/tbody/tr/td[2]/div/div
project.text.message.filterByTagsApplied=//div[contains(text(),'Filter By Tag(s) applied')]
project.button.filterByTagsApplied.close=//div[contains(text(),'Filter By Tag(s) applied')]/following::a[1]
project.popup.filterByColumn=//div[contains(@aria-labelledby,'requestfiltercolumnwindow')]
project.popup.filterByColumn.cancelButton=//a[contains(text(),'Cancel')]
project.popup.filterByColumn.submitButton=//a[contains(text(),'Cancel')]/following::span[contains(@id,'button') and contains(@id,'btnEl')]


project.select.option=//span[contains(text(),'Column ')]/following::input[1]/following::input[1]
project.field.columnList=//span[contains(text(),'Column ')]/following::input[1]
project.text.columnList.projectName=//li[text()='PROJECT NAME']
project.filterByColumn.isOption=//li[text()='is']
project.filterByColumn.isNotOption=//li[text()='is not']
project.filterByColumn.containsOption=//li[text()='contains']
project.filterByColumn.doesNotContainOption=//li[text()='does not contain']
project.filterByColumn.beginsWithOption=//li[text()='begins with']
project.filterByColumn.endsWithOption=//li[text()='ends with']
project.filterByColumn.keywords=//span[contains(text(),'Keyword ')]/following::input
project.text.message.filterByColumnApplied=//div[text()='Filter By Column applied']
project.button.filterByColumnApplied.close=//div[text()='Filter By Column applied']/following::a[1] 
project.alertPopup.filterBy=//div[contains(@id,'message-panel-body')]
project.text.errorMessage.filterBy=//div[contains(text(),'Please select the field value(s).')]
project.button.errorMessage.filterBy.okButton=//div[contains(text(),'Please select the field value(s).')]/following::a

project.text.columnList.plannedDate=//li[text()='PLANNED START DATE']
project.text.columnList.dueDate=//li[contains(text(),'DUE DATE')]
project.text.cloumnList.client=//li[contains(text(),'CLIENT')]
project.text.columnList.projectStatus=//li[contains(text(),'PROJECT STATUS')]

project.filterByColumn.isOnOption=//li[contains(text(),'is on')]
project.filterByColumn.isBeforeOption=//li[contains(text(),'is before')]
project.filterByColumn.isAfterOption=//li[contains(text(),'is after')]
project.filterByColumn.isbetweenOption=//li[contains(text(),'is between')]
project.filterByColumn.isbetweenStartdate=(//input[contains(@id,'datefield') and contains(@id,'inputEl')])[1]
project.filterByColumn.isbetweenEndDate=(//input[contains(@id,'datefield') and contains(@id,'inputEl')])[2]
project.filterByColumn.isbetweenStart.calenderDays=(//table[contains(@id,'datepicker') and contains(@id,'eventEl')])[1]/tbody/tr/td[contains(@class,'x-datepicker-active x-datepicker-cell')]/div
project.filterByColumn.isBetweenEnd.calenderDays=(//table[contains(@id,'datepicker') and contains(@id,'eventEl')])[2]/tbody/tr/td[contains(@class,'x-datepicker-active x-datepicker-cell')]/div
project.filterByColumn.isBetweenOption.dateErropopup=//div[contains(@id,'message-panel-body')]
project.filterByColumn.isBetweenOption.dateErrorMsg=//div[contains(text(),'Start date is greater than end date.')]
project.filterByColumn.isBetweenOption.errorPopupOkButton=//div[contains(text(),'Start date is greater than end date.')]/following::a
project.filterByColumn.isBeforeCurrentDate=//li[contains(text(),'is within x days before current date')]
project.filterByColumn.isBeforeCurrentDate.xDays=//div[contains(@id,'requestfiltercolumnwindow') and contains(@id,'body')]//div[contains(@id,'container') and contains(@id,'outerCt')]//div[contains(@id,'numberfield') and contains(@id,'bodyEl')]//input[contains(@id,'numberfield')]
project.filterByColumn.isAfterCurrentDate.xDays=//div[contains(@id,'requestfiltercolumnwindow') and contains(@id,'body')]//div[contains(@id,'container') and contains(@id,'outerCt')]//div[contains(@id,'numberfield') and contains(@id,'bodyEl')]//input[contains(@id,'numberfield')]
project.filterByColumn.isAfterCurrentDate=//li[contains(text(),'is within x days after current date')]
project.filterByColumn.plannedDate=//input[contains(@id,'datefield')]
project.filterByColumn.dueDate=//input[contains(@id,'datefield')]
project.filterByColumn.includes=//li[contains(text(),'includes')]
project.filterByColumn.doesNotIncludes=//li[contains(text(),'does not include')]

 
project.filterByColumn.datePicker=//div[contains(@id,'datepicker') and contains(@id,'innerEl')]
project.filterByColumn.datePicker.previousMonth=//div[contains(@id,'datepicker') and contains(@id,'prevEl')]
project.filterByColumn.datePicker.nextMonth=//div[contains(@id,'datepicker') and contains(@id,'nextEl')]
project.filterByColumn.datePicker.actualMonth=//a[contains(@data-qtip,'Choose a month (Control+Up/Down to move years)')]/span/span/span[2]
project.filterByColumn.datePicker.calenderdays=//table[contains(@id,'datepicker')]/tbody/tr/td[contains(@class,'x-datepicker-active x-datepicker-cell')]/div
project.filterByColumn.clientName=(//input[contains(@id,'combo') and contains(@id,'inputEl')])[3]
project.filterByColumn.statusName=(//input[contains(@id,'combo') and contains(@id,'inputEl')])[3]
project.filterByColumn.statusTrigger=(//input[contains(@id,'combo') and contains(@id,'inputEl')])[3]/parent::div/parent::div//div[contains(@id,'combo') and contains(@id,'trigger')]
project.filterByColumn.statusName.cancelled=//li[contains(text(),'Cancelled')]
project.filterByColumn.statusName.complete=//li[contains(text(),'Complete')]
project.filterByColumn.statusName.inProgress=//li[contains(text(),'In Progress')]
project.filterByColumn.statusName.onHold=//li[contains(text(),'On Hold')]
project.filterByColumn.statusName.projectStarted=//li[contains(text(),'Project Started')]

project.projectList.numberOfProject=//div[contains(@id,'projectlistview') and contains(@id,'body')]/div/div[2]/table
project.projectList.nameOfProject=//div[contains(@id,'projectlistview') and contains(@id,'body')]/div/div[2]/table["+j+"]/tbody/tr[1]/td[2]/div/div/span[2]
project.projectList.ProjectName=//div[contains(@id,'projectlistview') and contains(@id,'body')]/div/div[2]/table/tbody/tr[1]/td[2]/div/div/span[2]
project.projectList.plannedDate=//div[contains(@id,'projectlistview') and contains(@id,'body')]/div/div[2]/table/tbody/tr/td[4]/div 

# User

# Campaign

#project.list.page.success=return Ext.ComponentQuery.query('projectlistview')[0].queryById('project-grid-paging-bar').queryById('gridGotoPageNumber')
#project.button.filterBy=return Ext.ComponentQuery.query('projectlistview')[0].queryById('project-grid-paging-bar').query("button[cls='filterBtnCls']")[0]
#ExtJs component query id for create project
#project.field.create.projectName=return Ext.ComponentQuery.query('createproject')[0].query("textfield[name='name']")[0].el.dom.id
project.field.create.description=return Ext.ComponentQuery.query('createproject')[0].query("textfield[name='description']")[0].el.dom.id
project.field.create.projectType=return Ext.ComponentQuery.query('createproject')[0].query("textfield[name='188868']")[0].el.dom.id
#project.field.create.marketingObjective=return Ext.ComponentQuery.query('createproject')[0].query("textfield[name='188869']")[0].el.dom.id
#project.field.create.targetAudiance=return Ext.ComponentQuery.query('createproject')[0].query("textfield[name='188870']")[0].el.dom.id
#project.field.create.projectStatus=return Ext.ComponentQuery.query('createproject')[0].query("textfield[name='projectStatus']")[0].el.dom.id
#project.field.create.projectTimeApprover=return Ext.ComponentQuery.query('createproject')[0].query("textfield[name='timesheetApproverId']")[0].el.dom.id
#project.field.create.projectStartDate=return Ext.ComponentQuery.query('createproject')[0].query("textfield[name='startDate']")[0].el.dom.id
#project.field.create.billingType=return Ext.ComponentQuery.query('createproject')[0].query("textfield[name='billingTypeId']")[0].el.dom.id
#project.field.create.billingStatus=return Ext.ComponentQuery.query('createproject')[0].query("textfield[name='billingStatusId']")[0].el.dom.id
#project.field.create.projectDueDate=return Ext.ComponentQuery.query('createproject')[0].query("textfield[name='dueDate']")[0].el.dom.id

